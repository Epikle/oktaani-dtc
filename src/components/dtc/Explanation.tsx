'use client';

import { useQuery } from '@tanstack/react-query';
import { Info, Loader2 } from 'lucide-react';

import { addGPTData, getDtcData } from '@/app/dtc/[id]/actions';

import styles from './Explanation.module.css';

function Disclaimer() {
  return (
    <div className={styles.explanation}>
      <Info />
      <p>
        Please note that the information provided here is generated by an artificial intelligence (AI) system and may
        not always be entirely accurate or up-to-date. AI-generated content can occasionally contain inaccuracies,
        outdated data, or incomplete details.
      </p>
    </div>
  );
}

export function Explanation({ code, description }: { code: string; description: string }) {
  const { data, isLoading, isError } = useQuery({
    queryKey: ['listing', code, description],
    queryFn: async ({ signal }) => {
      const dtcData = await getDtcData(code);

      if (dtcData?.gptInfo) return dtcData.gptInfo;
      const { message } = await (
        await fetch(`${process.env.NEXT_PUBLIC_GPT_API_URL}/?code=${code}&description=${description}`, { signal })
      ).json();
      await addGPTData({ codeTitle: code, gptInfo: message });
      return message;
    },
  });

  if (isError) return <p>Error, please try again later.</p>;
  if (isLoading)
    return (
      <div className={styles.loader}>
        <Loader2 className={styles.spin} />
        <span>Generating explanation, please wait.</span>
      </div>
    );

  if (!data || data.toLowerCase().includes('no explanation found')) {
    return (
      <div className={styles.ai}>
        <p>Unfortunately, we couldn&apos;t generate an explanation for this code.</p>
        <Disclaimer />
      </div>
    );
  }

  return (
    <div className={styles.ai}>
      <p>{data} </p>
      <Disclaimer />
    </div>
  );
}
